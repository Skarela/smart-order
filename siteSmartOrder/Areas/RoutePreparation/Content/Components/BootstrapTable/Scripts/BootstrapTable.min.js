//BootstrapTable
!function (t) {
    "use strict"; var i = function (t) { var i = arguments, e = !0, o = 1; return t = t.replace(/%s/g, function () { var t = i[o++]; return "undefined" == typeof t ? (e = !1, "") : t }), e ? t : "" }, e = function (i, e, o, s) { var n = ""; return t.each(i, function (t, i) { return i[e] === s ? (n = i[o], !1) : !0 }), n }, o = function (i, e) { var o = -1; return t.each(i, function (t, i) { return i.field === e ? (o = t, !1) : !0 }), o }, s = function () { var i, e, o = t("<p/>").addClass("fixed-table-scroll-inner"), s = t("<div/>").addClass("fixed-table-scroll-outer"); return s.append(o), t("body").append(s), i = o[0].offsetWidth, s.css("overflow", "scroll"), e = o[0].offsetWidth, i === e && (e = s[0].clientWidth), s.remove(), i - e }, n = function (i, e, o, s) { if ("string" == typeof e) { var n = e.split("."); n.length > 1 ? (e = window, t.each(n, function (t, i) { e = e[i] })) : e = window[e] } return "object" == typeof e ? e : "function" == typeof e ? e.apply(i, o) : s }, a = function (t) { return "string" == typeof t ? t.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;") : t }, r = function (i, e) { this.options = e, this.$el = t(i), this.$el_ = this.$el.clone(), this.timeoutId_ = 0, this.init() }; r.DEFAULTS = { classes: "table table-hover", height: void 0, undefinedText: "-", sortName: void 0, sortOrder: "asc", striped: !1, columns: [], data: [], method: "get", url: void 0, cache: !0, contentType: "application/json", dataType: "json", ajaxOptions: {}, queryParams: function (t) { return t }, queryParamsType: "limit", responseHandler: function (t) { return t }, pagination: !1, sidePagination: "client", totalRows: 0, pageNumber: 1, pageSize: 10, pageList: [10, 25, 50, 100], search: !1, searchAlign: "right", selectItemName: "btSelectItem", showHeader: !0, showColumns: !1, showPaginationSwitch: !1, showRefresh: !1, showToggle: !1, buttonsAlign: "right", smartDisplay: !0, minimumCountColumns: 1, idField: void 0, cardView: !1, trimOnSearch: !0, clickToSelect: !1, singleSelect: !1, toolbar: void 0, toolbarAlign: "left", checkboxHeader: !0, sortable: !0, maintainSelected: !1, searchTimeOut: 500, iconSize: void 0, iconsPrefix: "fa", icons: { paginationSwitchDown: "glyphicon-collapse-down icon-chevron-down", paginationSwitchUp: "glyphicon-collapse-up icon-chevron-up", refresh: "fa-refresh", toggle: "fa-list-alt icon-list-alt", columns: "fa-columns" }, rowStyle: function () { return {} }, rowAttributes: function () { return {} }, onAll: function () { return !1 }, onClickRow: function () { return !1 }, onDblClickRow: function () { return !1 }, onSort: function () { return !1 }, onCheck: function () { return !1 }, onUncheck: function () { return !1 }, onCheckAll: function () { return !1 }, onUncheckAll: function () { return !1 }, onLoadSuccess: function () { return !1 }, onLoadError: function () { return !1 }, onColumnSwitch: function () { return !1 }, onPageChange: function () { return !1 }, onSearch: function () { return !1 }, onPreBody: function () { return !1 }, onPostBody: function () { return !1 }, onPostHeader: function () { return !1 } }, r.LOCALES = [], r.LOCALES["en-US"] = { formatLoadingMessage: function () { return "Loading, please wait..." }, formatRecordsPerPage: function (t) { return i("%s records per page", t) }, formatShowingRows: function (t, e, o) { return i("Showing %s to %s of %s rows", t, e, o) }, formatSearch: function () { return "Search" }, formatNoMatches: function () { return "No matching records found" }, formatPaginationSwitch: function () { return "Hide/Show pagination" }, formatRefresh: function () { return "Refresh" }, formatToggle: function () { return "Cambiar vista de tabla" }, formatColumns: function () { return "Columns" } }, t.extend(r.DEFAULTS, r.LOCALES["en-US"]), r.COLUMN_DEFAULTS = { radio: !1, checkbox: !1, checkboxEnabled: !0, field: void 0, title: void 0, "class": void 0, align: void 0, halign: void 0, valign: void 0, width: void 0, sortable: !1, order: "asc", visible: !0, switchable: !0, clickToSelect: !0, formatter: void 0, events: void 0, sorter: void 0, cellStyle: void 0, searchable: !0 }, r.EVENTS = { "all.bs.table": "onAll", "click-row.bs.table": "onClickRow", "dbl-click-row.bs.table": "onDblClickRow", "sort.bs.table": "onSort", "check.bs.table": "onCheck", "uncheck.bs.table": "onUncheck", "check-all.bs.table": "onCheckAll", "uncheck-all.bs.table": "onUncheckAll", "load-success.bs.table": "onLoadSuccess", "load-error.bs.table": "onLoadError", "column-switch.bs.table": "onColumnSwitch", "page-change.bs.table": "onPageChange", "search.bs.table": "onSearch", "pre-body.bs.table": "onPreBody", "post-body.bs.table": "onPostBody", "post-header.bs.table": "onPostHeader" }, r.prototype.init = function () { this.initContainer(), this.initTable(), this.initHeader(), this.initData(), this.initToolbar(), this.initPagination(), this.initBody(), this.initServer() }, r.prototype.initContainer = function () { this.$container = t(['<div class="bootstrap-table">', '<div class="fixed-table-toolbar"></div>', '<div class="fixed-table-container">', '<div class="fixed-table-header"><table></table></div>', '<div class="fixed-table-body">', '<div class="fixed-table-loading">', this.options.formatLoadingMessage(), "</div>", "</div>", '<div class="fixed-table-pagination"></div>', "</div>", "</div>"].join("")), this.$container.insertAfter(this.$el), this.$container.find(".fixed-table-body").append(this.$el), this.$container.after('<div class="clearfix"></div>'), this.$loading = this.$container.find(".fixed-table-loading"), this.$el.addClass(this.options.classes), this.options.striped && this.$el.addClass("table-striped") }, r.prototype.initTable = function () { var i = this, e = [], o = []; this.$header = this.$el.find("thead"), this.$header.length || (this.$header = t("<thead></thead>").appendTo(this.$el)), this.$header.find("tr").length || this.$header.append("<tr></tr>"), this.$header.find("th").each(function () { var i = t.extend({}, { title: t(this).html(), "class": t(this).attr("class") }, t(this).data()); e.push(i) }), this.options.columns = t.extend([], e, this.options.columns), t.each(this.options.columns, function (e, o) { i.options.columns[e] = t.extend({}, r.COLUMN_DEFAULTS, { field: e }, o) }), this.options.data.length || (this.$el.find("tbody tr").each(function () { var e = {}; e._id = t(this).attr("id"), e._class = t(this).attr("class"), t(this).find("td").each(function (o) { var s = i.options.columns[o].field; e[s] = t(this).html(), e["_" + s + "_id"] = t(this).attr("id"), e["_" + s + "_class"] = t(this).attr("class"), e["_" + s + "_data"] = t(this).data() }), o.push(e) }), this.options.data = o) }, r.prototype.initHeader = function () { var e = this, o = [], s = []; this.header = { fields: [], styles: [], classes: [], formatters: [], events: [], sorters: [], cellStyles: [], clickToSelects: [], searchables: [] }, t.each(this.options.columns, function (t, n) { var a = "", r = "", h = "", l = "", c = i(' class="%s"', n["class"]); e.options.sortOrder || n.order, n.visible && (r = i("text-align: %s; ", n.halign ? n.halign : n.align), h = i("text-align: %s; ", n.align), l = i("vertical-align: %s; ", n.valign), l += i("width: %spx; ", n.checkbox || n.radio ? 36 : n.width), o.push(n), e.header.fields.push(n.field), e.header.styles.push(h + l), e.header.classes.push(c), e.header.formatters.push(n.formatter), e.header.events.push(n.events), e.header.sorters.push(n.sorter), e.header.cellStyles.push(n.cellStyle), e.header.clickToSelects.push(n.clickToSelect), e.header.searchables.push(n.searchable), s.push("<th", n.checkbox || n.radio ? i(' class="bs-checkbox %s"', n["class"] || "") : c, i(' style="%s"', r + l), ">"), s.push(i('<div class="th-inner %s">', e.options.sortable && n.sortable ? "sortable" : "")), a = n.title, e.options.sortName === n.field && e.options.sortable && n.sortable && (a += e.getCaretHtml()), n.checkbox && (!e.options.singleSelect && e.options.checkboxHeader && (a = '<input name="btSelectAll" type="checkbox" />'), e.header.stateField = n.field), n.radio && (a = "", e.header.stateField = n.field, e.options.singleSelect = !0), s.push(a), s.push("</div>"), s.push('<div class="fht-cell"></div>'), s.push("</th>")) }), this.$header.find("tr").html(s.join("")), this.$header.find("th").each(function (i) { t(this).data(o[i]) }), this.$container.off("click", "th").on("click", "th", function (i) { e.options.sortable && t(this).data().sortable && e.onSort(i) }), !this.options.showHeader || this.options.cardView ? (this.$header.hide(), this.$container.find(".fixed-table-header").hide(), this.$loading.css("top", 0)) : (this.$header.show(), this.$container.find(".fixed-table-header").show(), this.$loading.css("top", "37px")), this.$selectAll = this.$header.find('[name="btSelectAll"]'), this.$container.off("click", '[name="btSelectAll"]').on("click", '[name="btSelectAll"]', function () { var i = t(this).prop("checked"); e[i ? "checkAll" : "uncheckAll"]() }) }, r.prototype.initData = function (t, i) { this.data = "append" === i ? this.data.concat(t) : "prepend" === i ? [].concat(t).concat(this.data) : t || this.options.data, this.options.data = this.data, "server" !== this.options.sidePagination && this.initSort() }, r.prototype.initSort = function () { var i = this, e = this.options.sortName, o = "desc" === this.options.sortOrder ? -1 : 1, s = t.inArray(this.options.sortName, this.header.fields); -1 !== s && this.data.sort(function (a, r) { var h = a[e], l = r[e], c = n(i.header, i.header.sorters[s], [h, l]); return void 0 !== c ? o * c : void 0 !== c ? o * c : ((void 0 === h || null === h) && (h = ""), (void 0 === l || null === l) && (l = ""), t.isNumeric(h) && t.isNumeric(l) ? (h = parseFloat(h), l = parseFloat(l), l > h ? -1 * o : o) : h === l ? 0 : ("string" != typeof h && (h = h.toString()), -1 === h.localeCompare(l) ? -1 * o : o)) }) }, r.prototype.onSort = function (i) { var e = t(i.currentTarget), o = this.$header.find("th").eq(e.index()); return this.$header.add(this.$header_).find("span.order").remove(), this.options.sortName === e.data("field") ? this.options.sortOrder = "asc" === this.options.sortOrder ? "desc" : "asc" : (this.options.sortName = e.data("field"), this.options.sortOrder = "asc" === e.data("order") ? "desc" : "asc"), this.trigger("sort", this.options.sortName, this.options.sortOrder), e.add(o).data("order", this.options.sortOrder).find(".th-inner").append(this.getCaretHtml()), "server" === this.options.sidePagination ? void this.initServer() : (this.initSort(), void this.initBody()) }, r.prototype.initToolbar = function () { var e, o, s = this, a = [], r = 0, h = 0; this.$toolbar = this.$container.find(".fixed-table-toolbar").html(""), "string" == typeof this.options.toolbar && t(i('<div class="customToolbar"></div>', this.options.toolbarAlign)).appendTo(this.$toolbar).append(t(this.options.toolbar)), a = [i('<div class="columns columns-%s btn-group pull-%s">', this.options.buttonsAlign, this.options.buttonsAlign)], "string" == typeof this.options.icons && (this.options.icons = n(null, this.options.icons)), this.options.showPaginationSwitch && a.push(i('<button class="btn btn-default" type="button" name="paginationSwitch" title="%s">', this.options.formatPaginationSwitch()), i('<i class="%s %s"></i>', this.options.iconsPrefix, this.options.icons.paginationSwitchDown), "</button>"), this.options.showRefresh && a.push(i('<button class="btn btn-default' + (void 0 === this.options.iconSize ? "" : " btn-" + this.options.iconSize) + '" type="button" name="refresh" title="%s">', this.options.formatRefresh()), i('<i class="%s %s"></i>', this.options.iconsPrefix, this.options.icons.refresh), "</button>"), this.options.showToggle && a.push(i('<button class="btn btn-default' + (void 0 === this.options.iconSize ? "" : " btn-" + this.options.iconSize) + '" style="border-radius:3px !important;"  type="button" name="toggle" title="%s">', this.options.formatToggle()), i('<i class="%s %s"></i>', this.options.iconsPrefix, this.options.icons.toggle), "</button>"), this.options.showColumns && (a.push(i('<div class="keep-open btn-group" data-toggle="tooltip" data-placement="top" title="Columnas">', this.options.formatColumns()), '<button type="button" class="btn btn-sm btn-default' + (void 0 == this.options.iconSize ? "" : " btn-" + this.options.iconSize) + ' dropdown-toggle" data-toggle="dropdown">', i('<i class="%s %s"></i>', this.options.iconsPrefix, this.options.icons.columns), ' <span class="caret" style="margin-left:5px !important;"></span>', "</button>", '<ul class="dropdown-menu" role="menu" style="font-size:12px; min-width: 120px !important;">'), t.each(this.options.columns, function (t, e) { if (!e.radio && !e.checkbox) { var o = e.visible ? ' checked="checked"' : ""; e.switchable && (a.push(i('<li><label style="padding: 1px 20px !important;"><input type="checkbox" data-field="%s" value="%s"%s> %s</label></li>', e.field, t, o, e.title)), h++) } }), a.push("</ul>", "</div>")), a.push("</div>"), (this.showToolbar || a.length > 2) && this.$toolbar.append(a.join("")), this.options.showPaginationSwitch && this.$toolbar.find('button[name="paginationSwitch"]').off("click").on("click", t.proxy(this.togglePagination, this)), this.options.showRefresh && this.$toolbar.find('button[name="refresh"]').off("click").on("click", t.proxy(this.refresh, this)), this.options.showToggle && this.$toolbar.find('button[name="toggle"]').off("click").on("click", function () { s.options.cardView = !s.options.cardView, s.initHeader(), s.initBody() }), this.options.showColumns && (e = this.$toolbar.find(".keep-open"), h <= this.options.minimumCountColumns && e.find("input").prop("disabled", !0), e.find("li").off("click").on("click", function (t) { t.stopImmediatePropagation() }), e.find("input").off("click").on("click", function () { var i = t(this); s.toggleColumn(i.val(), i.prop("checked"), !1), s.trigger("column-switch", t(this).data("field"), i.prop("checked")) })), this.options.search && (a = [], a.push('<div class="pull-' + this.options.searchAlign + ' search">', i('<input class="form-control' + (void 0 === this.options.iconSize ? "" : " input-" + this.options.iconSize) + '" type="text" placeholder="%s">', this.options.formatSearch()), "</div>"), this.$toolbar.append(a.join("")), o = this.$toolbar.find(".search input"), o.off("keyup").on("keyup", function (t) { clearTimeout(r), r = setTimeout(function () { s.onSearch(t) }, s.options.searchTimeOut) })) }, r.prototype.onSearch = function (i) { var e = t.trim(t(i.currentTarget).val()); this.options.trimOnSearch && t(i.currentTarget).val(e), e !== this.searchText && (this.searchText = e, this.options.pageNumber = 1, this.initSearch(), this.updatePagination(), this.trigger("search", e)) }, r.prototype.initSearch = function () { var i = this; if ("server" !== this.options.sidePagination) { var e = this.searchText && this.searchText.toLowerCase(), o = t.isEmptyObject(this.filterColumns) ? null : this.filterColumns; this.data = o ? t.grep(this.options.data, function (t) { for (var i in o) if (t[i] !== o[i]) return !1; return !0 }) : this.options.data, this.data = e ? t.grep(this.data, function (o, s) { for (var a in o) { a = t.isNumeric(a) ? parseInt(a, 10) : a; var r = o[a]; r = n(i.header, i.header.formatters[t.inArray(a, i.header.fields)], [r, o, s], r); var h = t.inArray(a, i.header.fields); if (-1 !== h && i.header.searchables[h] && ("string" == typeof r || "number" == typeof r) && -1 !== (r + "").toLowerCase().indexOf(e)) return !0 } return !1 }) : this.data } }, r.prototype.initPagination = function () { if (this.$pagination = this.$container.find(".fixed-table-pagination"), !this.options.pagination) return void this.$pagination.hide(); this.$pagination.show(); var e, o, s, n, a, r, h, l, c, p = this, d = [], u = this.getData(); "server" !== this.options.sidePagination && (this.options.totalRows = u.length), this.totalPages = 0, this.options.totalRows && (this.totalPages = ~~((this.options.totalRows - 1) / this.options.pageSize) + 1, this.options.totalPages = this.totalPages), this.totalPages > 0 && this.options.pageNumber > this.totalPages && (this.options.pageNumber = this.totalPages), this.pageFrom = (this.options.pageNumber - 1) * this.options.pageSize + 1, this.pageTo = this.options.pageNumber * this.options.pageSize, this.pageTo > this.options.totalRows && (this.pageTo = this.options.totalRows), d.push('<div class="pull-left pagination-detail">', '<span class="pagination-info">', this.options.formatShowingRows(this.pageFrom, this.pageTo, this.options.totalRows), "</span>"), d.push('<span class="page-list" data-placement="right" data-html="true">'); var f = ['<span class="btn-group dropup">', '<button type="button" class="btn btn-default ' + (void 0 === this.options.iconSize ? "" : " btn-" + this.options.iconSize) + ' dropdown-toggle" data-toggle="dropdown">', '<span class="page-size">', this.options.pageSize, "</span>", ' <span class="caret" style="margin-left:5px !important;"></span>', "</button>", '<ul class="dropdown-menu dropdown-page-list left" role="menu">'], g = this.options.pageList; if ("string" == typeof this.options.pageList) { var b = this.options.pageList.replace("[", "").replace("]", "").replace(/ /g, "").split(","); g = [], t.each(b, function (t, i) { g.push(+i) }) } for (t.each(g, function (t, e) { if (!p.options.smartDisplay || 0 === t || g[t - 1] <= p.options.totalRows) { var o = e === p.options.pageSize ? ' class="active"' : ""; f.push(i('<li%s><a href="javascript:void(0)">%s</a></li>', o, e)) } }), f.push("</ul></span>"), d.push(this.options.formatRecordsPerPage(f.join(""))), d.push("</span>"), d.push("</div>", '<div class="pull-right pagination">', '<ul class="pagination' + (void 0 === this.options.iconSize ? "" : " pagination-" + this.options.iconSize) + '">', '<li class="page-first"><a href="javascript:void(0)"><i class="fa fa-angle-double-left"></i></a></li>', '<li class="page-pre"><a href="javascript:void(0)"><i class="fa fa-angle-left"></i></a></li>'), this.totalPages < 5 ? (o = 1, s = this.totalPages) : (o = this.options.pageNumber - 2, s = o + 3, 1 > o && (o = 1, s = 4), s > this.totalPages && (s = this.totalPages, o = s - 3)), e = o; s >= e; e++) d.push('<li class="page-number' + (e === this.options.pageNumber ? " active" : "") + '">', '<a href="javascript:void(0)">', e, "</a>", "</li>"); d.push('<li class="page-next"><a href="javascript:void(0)"><i class="fa fa-angle-right"></i></a></li>', '<li class="page-last"><a href="javascript:void(0)"><i class="fa fa-angle-double-right"></i></a></li>', "</ul>", "</div>"), this.$pagination.html(d.join("")), n = this.$pagination.find(".page-list a"), a = this.$pagination.find(".page-first"), r = this.$pagination.find(".page-pre"), h = this.$pagination.find(".page-next"), l = this.$pagination.find(".page-last"), c = this.$pagination.find(".page-number"), this.options.pageNumber <= 1 && (a.addClass("disabled"), r.addClass("disabled")), this.options.pageNumber >= this.totalPages && (h.addClass("disabled"), l.addClass("disabled")), this.options.smartDisplay && (this.totalPages <= 1 && this.$pagination.find("div.pagination").hide(), (this.options.pageList.length < 2 || this.options.totalRows <= this.options.pageList[0]) && this.$pagination.find("span.page-list").hide(), this.$pagination[this.getData().length ? "show" : "hide"]()), n.off("click").on("click", t.proxy(this.onPageListChange, this)), a.off("click").on("click", t.proxy(this.onPageFirst, this)), r.off("click").on("click", t.proxy(this.onPagePre, this)), h.off("click").on("click", t.proxy(this.onPageNext, this)), l.off("click").on("click", t.proxy(this.onPageLast, this)), c.off("click").on("click", t.proxy(this.onPageNumber, this)) }, r.prototype.updatePagination = function (i) { i && t(i.currentTarget).hasClass("disabled") || (this.options.maintainSelected || this.resetRows(), this.initPagination(), "server" === this.options.sidePagination ? this.initServer() : this.initBody(), this.trigger("page-change", this.options.pageNumber, this.options.pageSize)) }, r.prototype.onPageListChange = function (i) { var e = t(i.currentTarget); e.parent().addClass("active").siblings().removeClass("active"), this.options.pageSize = +e.text(), this.$toolbar.find(".page-size").text(this.options.pageSize), this.updatePagination(i) }, r.prototype.onPageFirst = function (t) { this.options.pageNumber = 1, this.updatePagination(t) }, r.prototype.onPagePre = function (t) { this.options.pageNumber--, this.updatePagination(t) }, r.prototype.onPageNext = function (t) { this.options.pageNumber++, this.updatePagination(t) }, r.prototype.onPageLast = function (t) { this.options.pageNumber = this.totalPages, this.updatePagination(t) }, r.prototype.onPageNumber = function (i) { this.options.pageNumber !== +t(i.currentTarget).text() && (this.options.pageNumber = +t(i.currentTarget).text(), this.updatePagination(i)) }, r.prototype.initBody = function (s) { var r = this, h = [], l = this.getData(); this.trigger("pre-body", l), this.$body = this.$el.find("tbody"), this.$body.length || (this.$body = t("<tbody></tbody>").appendTo(this.$el)), this.options.pagination && "server" !== this.options.sidePagination || (this.pageFrom = 1, this.pageTo = l.length); for (var c = this.pageFrom - 1; c < this.pageTo; c++) { var p = l[c], d = {}, u = [], f = {}, g = []; if (d = n(this.options, this.options.rowStyle, [p, c], d), d && d.css) for (var b in d.css) u.push(b + ": " + d.css[b]); if (f = n(this.options, this.options.rowAttributes, [p, c], f)) for (var b in f) g.push(i('%s="%s"', b, a(f[b]))); h.push("<tr", i(" %s", g.join(" ")), i(' id="%s"', t.isArray(p) ? void 0 : p._id), i(' class="%s"', d.classes || (t.isArray(p) ? void 0 : p._class)), i(' data-index="%s"', c), ">"), this.options.cardView && h.push(i('<td colspan="%s">', this.header.fields.length)), t.each(this.header.fields, function (s, a) { var l = "", f = p[a], g = "", b = {}, m = "", y = r.header.classes[s], v = "", w = r.options.columns[o(r.options.columns, a)]; if (d = i('style="%s"', u.concat(r.header.styles[s]).join("; ")), f = n(r.header, r.header.formatters[s], [f, p, c], f), p["_" + a + "_id"] && (m = i(' id="%s"', p["_" + a + "_id"])), p["_" + a + "_class"] && (y = i(' class="%s"', p["_" + a + "_class"])), b = n(r.header, r.header.cellStyles[s], [f, p, c], b), b.classes && (y = i(' class="%s"', b.classes)), b.css) { var k = []; for (var $ in b.css) k.push($ + ": " + b.css[$]); d = i('style="%s"', k.concat(r.header.styles[s]).join("; ")) } p["_" + a + "_data"] && !t.isEmptyObject(p["_" + a + "_data"]) && t.each(p["_" + a + "_data"], function (t, e) { "index" !== t && (v += i(' data-%s="%s"', t, e)) }), w.checkbox || w.radio ? (g = w.checkbox ? "checkbox" : g, g = w.radio ? "radio" : g, l = [r.options.cardView ? '<div class="card-view">' : '<td class="bs-checkbox">', "<input style='float: left; margin: 7px 10px 0 10px'" + i(' data-index="%s"', c) + i(' name="%s"', r.options.selectItemName) + i(' type="%s"', g) + i(' value="%s"', p[r.options.idField]) + i(' checked="%s"', f === !0 || f && f.checked ? "checked" : void 0) + i(' disabled="%s"', !w.checkboxEnabled || f && f.disabled ? "disabled" : void 0) + " />", r.options.cardView ? "</div>" : "</td>"].join("")) : (f = "undefined" == typeof f || null === f ? r.options.undefinedText : f, l = r.options.cardView ? ['<div class="card-view">', r.options.showHeader ? i('<span class="title" %s>%s: </span>', d, e(r.options.columns, "field", "title", a)) : "", i('<span class="value">%s</span>', f), "</div>"].join("") : [i("<td%s %s %s %s>", m, y, d, v), f, "</td>"].join(""), r.options.cardView && r.options.smartDisplay && "" === f && (l = "")), h.push(l) }), this.options.cardView && h.push("</td>"), h.push("</tr>") } h.length || h.push('<tr class="no-records-found">', i('<td colspan="%s">%s</td>', this.header.fields.length, this.options.formatNoMatches()), "</tr>"), this.$body.html(h.join("")), s || this.scrollTo(0), this.$body.find("> tr > td").off("click").on("click", function () { var e = t(this).parent(); r.trigger("click-row", r.data[e.data("index")], e), r.options.clickToSelect && r.header.clickToSelects[e.children().index(t(this))] && e.find(i('[name="%s"]', r.options.selectItemName))[0].click() }), this.$body.find("tr").off("dblclick").on("dblclick", function () { r.trigger("dbl-click-row", r.data[t(this).data("index")], t(this)) }), this.$selectItem = this.$body.find(i('[name="%s"]', this.options.selectItemName)), this.$selectItem.off("click").on("click", function (i) { i.stopImmediatePropagation(); var e = t(this).prop("checked"), o = r.data[t(this).data("index")]; o[r.header.stateField] = e, r.trigger(e ? "check" : "uncheck", o), r.options.singleSelect && (r.$selectItem.not(this).each(function () { r.data[t(this).data("index")][r.header.stateField] = !1 }), r.$selectItem.filter(":checked").not(this).prop("checked", !1)), r.updateSelected() }), t.each(this.header.events, function (i, e) { if (e) { "string" == typeof e && (e = n(null, e)); for (var o in e) r.$body.find("tr").each(function () { var s = t(this), n = s.find(r.options.cardView ? ".card-view" : "td").eq(i), a = o.indexOf(" "), h = o.substring(0, a), l = o.substring(a + 1), c = e[o]; n.find(l).off(h).on(h, function (t) { var e = s.data("index"), o = r.data[e], n = o[r.header.fields[i]]; c.apply(this, [t, n, o, e]) }) }) } }), this.updateSelected(), this.resetView(), this.trigger("post-body") }, r.prototype.initServer = function (i, e) { var o = this, s = {}, a = { pageSize: this.options.pageSize, pageNumber: this.options.pageNumber, searchText: this.searchText, sortName: this.options.sortName, sortOrder: this.options.sortOrder }; this.options.url && ("limit" === this.options.queryParamsType && (a = { search: a.searchText, sort: a.sortName, order: a.sortOrder }, this.options.pagination && (a.limit = this.options.pageSize, a.offset = this.options.pageSize * (this.options.pageNumber - 1))), s = n(this.options, this.options.queryParams, [a], s), t.extend(s, e || {}), s !== !1 && (i || this.$loading.show(), t.ajax(t.extend({}, n(null, this.options.ajaxOptions), { type: this.options.method, url: this.options.url, data: "application/json" === this.options.contentType && "post" === this.options.method ? JSON.stringify(s) : s, cache: this.options.cache, contentType: this.options.contentType, dataType: this.options.dataType, success: function (t) { t = n(o.options, o.options.responseHandler, [t], t), o.load(t), o.trigger("load-success", t) }, error: function (t) { o.trigger("load-error", t.status) }, complete: function () { i || o.$loading.hide() } })))) }, r.prototype.getCaretHtml = function () { return ['<span class="order' + ("desc" === this.options.sortOrder ? "" : " dropup") + '">', '<span class="caret" style="margin: 10px 5px;"></span>', "</span>"].join("") }, r.prototype.updateSelected = function () { var i = this.$selectItem.filter(":enabled").length === this.$selectItem.filter(":enabled").filter(":checked").length; this.$selectAll.add(this.$selectAll_).prop("checked", i), this.$selectItem.each(function () { t(this).parents("tr")[t(this).prop("checked") ? "addClass" : "removeClass"]("selected") }) }, r.prototype.updateRows = function (i) { var e = this; this.$selectItem.each(function () { e.data[t(this).data("index")][e.header.stateField] = i }) }, r.prototype.resetRows = function () { var i = this; t.each(this.data, function (t, e) { i.$selectAll.prop("checked", !1), i.$selectItem.prop("checked", !1), e[i.header.stateField] = !1 }) }, r.prototype.trigger = function (i) { var e = Array.prototype.slice.call(arguments, 1); i += ".bs.table", this.options[r.EVENTS[i]].apply(this.options, e), this.$el.trigger(t.Event(i), e), this.options.onAll(i, e), this.$el.trigger(t.Event("all.bs.table"), [i, e]) }, r.prototype.resetHeader = function () { var i = this, e = this.$container.find(".fixed-table-header"), o = this.$container.find(".fixed-table-body"), n = this.$el.width() > o.width() ? s() : 0; return this.$el.is(":hidden") ? (clearTimeout(this.timeoutId_), void (this.timeoutId_ = setTimeout(t.proxy(this.resetHeader, this), 100))) : (this.$header_ = this.$header.clone(!0, !0), this.$selectAll_ = this.$header_.find('[name="btSelectAll"]'), void setTimeout(function () { e.css({ height: "37px", "border-bottom": "1px solid #dddddd", "margin-right": n }).find("table").css("width", i.$el.css("width")).html("").attr("class", i.$el.attr("class")).append(i.$header_), i.$header.find("th").each(function (e) { i.$header_.find("th").eq(e).data(t(this).data()) }), i.$body.find("tr:first-child:not(.no-records-found) > *").each(function (e) { i.$header_.find("div.fht-cell").eq(e).width(t(this).innerWidth()) }), i.$el.css("margin-top", -i.$header.height()), o.off("scroll").on("scroll", function () { e.scrollLeft(t(this).scrollLeft()) }), i.trigger("post-header") })) }, r.prototype.toggleColumn = function (t, e, o) { if (-1 !== t && (this.options.columns[t].visible = e, this.initHeader(), this.initSearch(), this.initPagination(), this.initBody(), this.options.showColumns)) { var s = this.$toolbar.find(".keep-open input").prop("disabled", !1); o && s.filter(i('[value="%s"]', t)).prop("checked", e), s.filter(":checked").length <= this.options.minimumCountColumns && s.filter(":checked").prop("disabled", !0) } }, r.prototype.resetView = function (t) { var i = this; if (this.header, t && t.height && (this.options.height = t.height), this.$selectAll.prop("checked", this.$selectItem.length > 0 && this.$selectItem.length === this.$selectItem.filter(":checked").length), this.options.height) { var e = +this.$toolbar.children().outerHeight(!0), o = +this.$pagination.children().outerHeight(!0), s = this.options.height - e - o; this.$container.find(".fixed-table-container").css("height", s + "px") } return this.options.cardView ? (i.$el.css("margin-top", "0"), void i.$container.find(".fixed-table-container").css("padding-bottom", "0")) : (this.options.showHeader && this.options.height ? this.resetHeader() : this.trigger("post-header"), void (this.options.height && this.options.showHeader && this.$container.find(".fixed-table-container").css("padding-bottom", "37px"))) }, r.prototype.getData = function () { return this.searchText || !t.isEmptyObject(this.filterColumns) ? this.data : this.options.data }, r.prototype.load = function (i) { var e = !1; "server" === this.options.sidePagination ? (this.options.totalRows = i.total, e = i.fixedScroll, i = i.rows) : t.isArray(i) || (e = i.fixedScroll, i = i.data), this.initData(i), this.initSearch(), this.initPagination(), this.initBody(e) }, r.prototype.append = function (t) { this.initData(t, "append"), this.initSearch(), this.initPagination(), this.initBody(!0) }, r.prototype.prepend = function (t) { this.initData(t, "prepend"), this.initSearch(), this.initPagination(), this.initBody(!0) }, r.prototype.remove = function (i) { var e, o, s = this.options.data.length; if (i.hasOwnProperty("field") && i.hasOwnProperty("values")) { for (e = s - 1; e >= 0; e--) o = this.options.data[e], o.hasOwnProperty(i.field) && -1 !== t.inArray(o[i.field], i.values) && this.options.data.splice(e, 1); s !== this.options.data.length && (this.initSearch(), this.initPagination(), this.initBody(!0)) } }, r.prototype.insertRow = function (t) { t.hasOwnProperty("index") && t.hasOwnProperty("row") && (this.data.splice(t.index, 0, t.row), this.initBody(!0)) }, r.prototype.updateRow = function (i) { i.hasOwnProperty("index") && i.hasOwnProperty("row") && (t.extend(this.data[i.index], i.row), this.initBody(!0)) }, r.prototype.mergeCells = function (i) { var e, o, s = i.index, n = t.inArray(i.field, this.header.fields), a = i.rowspan || 1, r = i.colspan || 1, h = this.$body.find("tr"), l = h.eq(s).find("td").eq(n); if (!(0 > s || 0 > n || s >= this.data.length)) { for (e = s; s + a > e; e++) for (o = n; n + r > o; o++) h.eq(e).find("td").eq(o).hide(); l.attr("rowspan", a).attr("colspan", r).show() } }, r.prototype.getOptions = function () { return this.options }, r.prototype.getSelections = function () { var i = this; return t.grep(this.data, function (t) { return t[i.header.stateField] }) }, r.prototype.checkAll = function () { this.checkAll_(!0) }, r.prototype.uncheckAll = function () { this.checkAll_(!1) }, r.prototype.checkAll_ = function (t) { var i; t || (i = this.getSelections()), this.$selectItem.filter(":enabled").prop("checked", t), this.updateRows(t), this.updateSelected(), t && (i = this.getSelections()), this.trigger(t ? "check-all" : "uncheck-all", i) }, r.prototype.check = function (t) { this.check_(!0, t) }, r.prototype.uncheck = function (t) { this.check_(!1, t) }, r.prototype.check_ = function (t, e) { this.$selectItem.filter(i('[data-index="%s"]', e)).prop("checked", t), this.data[e][this.header.stateField] = t, this.updateSelected(), this.trigger(t ? "check" : "uncheck", this.data[e]) }, r.prototype.checkBy = function (t) { this.checkBy_(!0, t) }, r.prototype.uncheckBy = function (t) { this.checkBy_(!1, t) }, r.prototype.checkBy_ = function (e, o) { if (o.hasOwnProperty("field") && o.hasOwnProperty("values")) { var s = this; t.each(this.options.data, function (n, a) { return a.hasOwnProperty(o.field) ? void (-1 !== t.inArray(a[o.field], o.values) && (s.$selectItem.filter(i('[data-index="%s"]', n)).prop("checked", e), a[s.header.stateField] = e, s.trigger(e ? "check" : "uncheck", a))) : !1 }), this.updateSelected() } }, r.prototype.destroy = function () { this.$el.insertBefore(this.$container), t(this.options.toolbar).insertBefore(this.$el), this.$container.next().remove(), this.$container.remove(), this.$el.html(this.$el_.html()).css("margin-top", "0").attr("class", this.$el_.attr("class") || "") }, r.prototype.showLoading = function () { this.$loading.show() }, r.prototype.hideLoading = function () { this.$loading.hide() }, r.prototype.togglePagination = function () { this.options.pagination = !this.options.pagination; var t = this.$toolbar.find('button[name="paginationSwitch"] i'); this.options.pagination ? t.attr("class", this.options.iconsPrefix + " " + this.options.icons.paginationSwitchDown) : t.attr("class", this.options.iconsPrefix + " " + this.options.icons.paginationSwitchUp), this.updatePagination() }, r.prototype.refresh = function (t) { t && t.url && (this.options.url = t.url, this.options.pageNumber = 1), this.initServer(t && t.silent, t && t.query) }, r.prototype.showColumn = function (t) { this.toggleColumn(o(this.options.columns, t), !0, !0) }, r.prototype.hideColumn = function (t) { this.toggleColumn(o(this.options.columns, t), !1, !0) }, r.prototype.filterBy = function (i) { this.filterColumns = t.isEmptyObject(i) ? {} : i, this.options.pageNumber = 1, this.initSearch(), this.updatePagination() }, r.prototype.scrollTo = function (t) { var i = this.$container.find(".fixed-table-body"); "string" == typeof t && (t = "bottom" === t ? i[0].scrollHeight : 0), "number" == typeof t && i.scrollTop(t) }, r.prototype.selectPage = function (t) { t > 0 && t <= this.options.totalPages && (this.options.pageNumber = t, this.updatePagination()) }, r.prototype.prevPage = function () { this.options.pageNumber > 1 && (this.options.pageNumber--, this.updatePagination()) }, r.prototype.nextPage = function () { this.options.pageNumber < this.options.totalPages && (this.options.pageNumber++, this.updatePagination()) }, r.prototype.toggleView = function () { this.options.cardView = !this.options.cardView, this.initHeader(), this.initBody() }; var h = ["getOptions", "getSelections", "getData", "load", "append", "prepend", "remove", "insertRow", "updateRow", "mergeCells", "checkAll", "uncheckAll", "check", "uncheck", "checkBy", "uncheckBy", "refresh", "resetView", "destroy", "showLoading", "hideLoading", "showColumn", "hideColumn", "filterBy", "scrollTo", "selectPage", "prevPage", "nextPage", "togglePagination", "toggleView"];
    t.fn.bootstrapTable = function (i, e) { var o; return this.each(function () { var s = t(this), n = s.data("bootstrap.table"), a = t.extend({}, r.DEFAULTS, s.data(), "object" == typeof i && i); if ("string" == typeof i) { if (t.inArray(i, h) < 0) throw "Unknown method: " + i; if (!n) return; o = n[i](e), "destroy" === i && s.removeData("bootstrap.table") } n || s.data("bootstrap.table", n = new r(this, a)) }), "undefined" == typeof o ? this : o }, t.fn.bootstrapTable.Constructor = r, t.fn.bootstrapTable.defaults = r.DEFAULTS, t.fn.bootstrapTable.columnDefaults = r.COLUMN_DEFAULTS, t.fn.bootstrapTable.locales = r.LOCALES, t.fn.bootstrapTable.methods = h, t(function () { t('[data-toggle="table"]').bootstrapTable() })
}(jQuery);

//BootstrapTable_es
!function (a) { "use strict"; a.fn.bootstrapTable.locales["es-MX"] = { formatLoadingMessage: function () { return "Cargando, espere por favor..." }, formatRecordsPerPage: function (a) { return a + "" }, formatShowingRows: function (a, b, c) { return "Mostrando " + a + " a " + b + " de " + c + " filas" }, formatSearch: function () { return "Buscar" }, formatNoMatches: function () { return "No se encontraron registros" } }, a.extend(a.fn.bootstrapTable.defaults, a.fn.bootstrapTable.locales["es-MX"]) }(jQuery);

//BootstrapTableFilter
!function (t) { "use strict"; var e = function (e) { var i = e; return "object" == typeof e && (i = e.label, "object" == typeof e.i18n && t.each(e.i18n, function (t, e) { i = i.replace("{%" + t + "}", e) })), i }, i = function (t, e) { return "object" == typeof e ? e.id : t }, n = function (e) { var i, n = !1, l = {}, o = 0, r = e.find(".filter-enabled"); return t(":input", e).each(function () { var e = t(this); e.is(r) || (i = e.attr("data-name"), i && (l[i] = e.val()), n = e.val(), o++) }), t.isEmptyObject(l) ? n : l }, l = function (e, i) { this.options = i, this.$el = t(e), this.$el_ = this.$el.clone(), this.timeoutId_ = 0, this.filters = {}, this.init() }; l.DEFAULTS = { filters: [], connectTo: !1, filterIcon: '<span class="fa fa-filter"></span>', refreshIcon: '<span class="fa fa-refresh"></span>', clearAllIcon: '<span class="fa fa-times"></span>', formatRemoveFiltersMessage: function () { return "Remove all filters" }, formatSearchMessage: function () { return "Search" }, onAll: function () { return !1 }, onFilterChanged: function () { return !1 }, onResetView: function () { return !1 }, onAddFilter: function () { return !1 }, onRemoveFilter: function () { return !1 }, onEnableFilter: function () { return !1 }, onDisableFilter: function () { return !1 }, onSelectFilterOption: function () { return !1 }, onUnselectFilterOption: function () { return !1 }, onDataChanged: function () { return !1 }, onSubmit: function () { return !1 } }, l.EVENTS = { "all.bs.table.filter": "onAll", "reset.bs.table.filter": "onResetView", "add-filter.bs.table.filter": "onAddFilter", "remove-filter.bs.table.filter": "onRemoveFilter", "enable-filter.bs.table.filter": "onEnableFilter", "disable-filter.bs.table.filter": "onDisableFilter", "select-filter-option.bs.table.filter": "onSelectFilterOption", "unselect-filter-option.bs.table.filter": "onUnselectFilterOption", "data-changed.bs.table.filter": "onDataChanged", "submit.bs.table.filter": "onSubmit" }, l.FILTER_SOURCES = { range: { search: !1, rows: [{ id: "eq", label: '{%msg} <input class="form-control" type="text" >', i18n: { msg: "Equals" } }], check: function (t, e) { return "undefined" != typeof t.lte && parseInt(e) > parseInt(t.lte) ? !1 : "undefined" != typeof t.gte && parseInt(e) < parseInt(t.gte) ? !1 : "undefined" != typeof t.eq && parseInt(e) != parseInt(t.eq) ? !1 : !0 } }, search: { search: !1, rows: [{ id: "cnt", label: '{%msg} <input class="form-control searchContent" type="text" placeholder="Buscar..." style=font-size:12px !important;">', i18n: { msg: "Contains" } }], check: function (t, e) { return "undefined" != typeof t.eq && e != t.eq ? !1 : "undefined" != typeof t.neq && e == t.neq ? !1 : "undefined" != typeof t.cnt && e.indexOf(t.cnt) < 0 ? !1 : "undefined" != typeof t.ncnt && e.indexOf(t.ncnt) >= 0 ? !1 : "undefined" != typeof t._values && t._values.indexOf("ept") >= 0 && e.trim() ? !1 : "undefined" != typeof t._values && t._values.indexOf("nept") >= 0 && !e.trim() ? !1 : !0 } }, ajaxSelect: { search: !0, rows: [], rowsCallback: function (e, i) { var n = this; clearTimeout(this.timeoutId_), this.timeoutId_ = setTimeout(function () { t.ajax(e.source, { dataType: "json", data: { q: i } }).done(function (t) { n.clearFilterOptions(e.field), n.fillFilterOptions(e.field, t) }) }, 300) } }, select: { search: !0, rows: [], rowsCallback: function (t, i) { var n = t.values; i.length && (n = n.filter(function (t) { return e(t).indexOf(i) > -1 })), this.clearFilterOptions(t.field), this.fillFilterOptions(t.field, n.slice(0, 20)) } } }, l.EXTERNALS = [], l.prototype.init = function () { this.initContainer(), this.initMainButton(), this.initFilters(), this.initRefreshButton(), this.initFilterSelector(), this.initExternals() }, l.prototype.initContainer = function () { var e = this; this.$toolbar = t(['<div class="btn-toolbar">', '<div  data-toggle="tooltip" data-placement="top" title="Filtros" class="btn-group btn-group-filter-main" style="margin-right:5px;">', '<button type="button" class="btn btn-default dropdown-toggle btn-filter btn-sm" data-toggle="dropdown">', this.options.filterIcon, "</button>", '<ul class="dropdown-menu" role="menu" style="font-size:12px">', "</ul>", "</div>", '<div class="btn-group btn-group-filters">', "</div>", '<div data-toggle="tooltip" data-placement="top" title="Actualizar" class="btn-group btn-group-filter-refresh">', '<button type="button" class="btn btn-default btn-primary btn-refresh btn-sm" data-toggle="dropdown">', this.options.refreshIcon, "</button>", "</div>", "</div>"].join("")), this.$toolbar.appendTo(this.$el), this.$filters = this.$toolbar.find(".btn-group-filters"), this.$toolbar.delegate(".btn-group-filters li", "click", function (t) { t.stopImmediatePropagation() }), this.$toolbar.delegate(".btn-group-filters li .filter-enabled", "click", function (i) { var l = t(this), o = l.closest("[data-filter-field]").attr("data-filter-field"), r = l.closest("[data-val]"), s = r.attr("data-val"); if (l.prop("checked")) { var a = n(r); e.selectFilterOption(o, s, a) } else e.unselectFilterOption(o, s); i.stopImmediatePropagation() }), this.$toolbar.delegate(".btn-group-filters li :input:not(.filter-enabled)", "click change", function (i) { var l = t(this), o = l.closest("[data-filter-field]").attr("data-filter-field"), r = l.closest("[data-val]"), s = r.attr("data-val"), a = r.find(".filter-enabled"); if (l.val()) { var p = n(r); e.selectFilterOption(o, s, p), a.prop("checked", !0) } else e.unselectFilterOption(o, s), a.prop("checked", !1); i.stopImmediatePropagation() }), this.$toolbar.delegate(".search-values", "keyup", function () { var i = t(this), n = i.val(), l = i.closest("[data-filter-field]").attr("data-filter-field"), o = e.getFilter(l), r = e.getFilterType(o); r.rowsCallback && r.rowsCallback.call(e, o, n) }) }, l.prototype.initMainButton = function () { this.$button = this.$toolbar.find(".btn-filter"), this.$buttonList = this.$button.parent().find(".dropdown-menu"), this.$button.dropdown() }, l.prototype.initRefreshButton = function () { var t = this; this.$refreshButton = this.$toolbar.find(".btn-refresh"), this.$refreshButton.click(function () { t.trigger("submit", t.getData()), t.toggleRefreshButton(!0) }), this.toggleRefreshButton(!0) }, l.prototype.initFilters = function () { var e = this; this.$buttonList.append('<li class="remove-filters"><a href="javascript:void(0)">' + this.options.clearAllIcon + " " + this.options.formatRemoveFiltersMessage() + "</a></li>"), this.$buttonList.append('<li class="divider" style="margin:0 !important"></li>'), t.each(this.options.filters, function (t, i) { e.addFilter(i) }), this.$toolbar.delegate(".remove-filters *", "click", function () { e.disableFilters() }) }, l.prototype.initFilterSelector = function () { var e = this, i = function (t) { var i = t.closest("[data-filter-field]").attr("data-filter-field"); t.prop("checked") ? e.enableFilter(i) : e.disableFilter(i) }; this.$buttonList.delegate("li :input[type=checkbox]", "click", function (e) { i(t(this)), e.stopImmediatePropagation() }), this.$buttonList.delegate("li, li a", "click", function (e) { var n = t(":input[type=checkbox]", this); n.length && (n.prop("checked", !n.is(":checked")), i(n), e.stopImmediatePropagation()); var l = t(":input[type=text]", this); l.length && l.focus() }) }, l.prototype.initExternals = function () { var e = this; t.each(l.EXTERNALS, function (t, i) { i.call(e) }) }, l.prototype.getFilter = function (t) { if ("undefined" == typeof this.filters[t]) throw "Invalid filter " + t; return this.filters[t] }, l.prototype.getFilterType = function (e, i) { if (e) { var n = "object" == typeof e ? e : this.getFilter(e); i = n.type } if ("undefined" == typeof l.FILTER_SOURCES[i]) throw "Invalid filter type " + i; var o = l.FILTER_SOURCES[i]; return "undefined" != typeof o.extend && (o = t.extend({}, o, this.getFilterType(null, o.extend))), o }, l.prototype.checkFilterTypeValue = function (e, i, n) { return "function" == typeof e.check ? e.check(i, n) : "undefined" != typeof i._values ? t.inArray("" + n, i._values) >= 0 : !0 }, l.prototype.clearFilterOptions = function (t) { var e = this.getFilter(t); e.$dropdownList.find("li:not(.static)").remove(), this.toggleRefreshButton(!0) }, l.prototype.fillFilterOptions = function (n, l, o) { var r = this, s = this.getFilter(n); o = o || ""; var a, p; t.each(l, function (l, d) { a = i(l, d), p = r.isSelected(n, a), s.$dropdownList.append(t('<li data-val="' + a + '" class="' + o + '"><a style="padding: 1px 10px; !important"><input style="display:none !important" type="checkbox" class="filter-enabled"' + (p ? " checked" : "") + "> " + e(d) + "</a></li>")) }) }, l.prototype.trigger = function (e) { var i = Array.prototype.slice.call(arguments, 1); if (e += ".bs.table.filter", "undefined" == typeof l.EVENTS[e]) throw "Unknown event " + e; this.options[l.EVENTS[e]].apply(this.options, i), this.$el.trigger(t.Event(e), i), this.options.onAll(e, i), this.$el.trigger(t.Event("all.bs.table.filter"), [e, i]) }, l.prototype.resetView = function () { this.$el.html(), this.init(), this.trigger("reset") }, l.prototype.addFilter = function (t) { this.filters[t.field] = t, this.$buttonList.append('<li data-filter-field="' + t.field + '" ><a><input type="checkbox"> ' + t.label + "</a></li>"), this.trigger("add-filter", t), "undefined" != typeof t.enabled && t.enabled && this.enableFilter(t.field) }, l.prototype.removeFilter = function (t) { this.disableFilter(t), this.$buttonList.find("[data-filter-field=" + t + "]").remove(), this.trigger("remove-filter", t) }, l.prototype.enableFilter = function (e) { var i = this.getFilter(e), n = t(['<div class="btn-group" data-filter-field="' + e + '">', '<button type="button" class="btn btn-default dropdown-toggle btn-sm" data-toggle="dropdown"> ', i.label, ' <span class="caret" style="margin-left:5px !important;"></span>', "</button>", '<ul class="dropdown-menu" role="menu">', "</ul>", "</div>"].join("")); n.appendTo(this.$filters), i.$dropdown = n, i.$dropdownList = n.find(".dropdown-menu"), i.enabled = !0, this.$buttonList.find("[data-filter-field=" + e + "] input[type=checkbox]").prop("checked", !0); var l = this.getFilterType(i); l.search && (i.$dropdownList.append(t('<li class="static"><span><input type="text" class="form-control search-values" placeholder="' + this.options.formatSearchMessage() + '"></span></li>')), i.$dropdownList.append(t('<li class="static divider"></li>'))), l.rows && this.fillFilterOptions(e, l.rows, "static"), l.rowsCallback && l.rowsCallback.call(this, i, ""), this.toggleRefreshButton(!0), this.trigger("enable-filter", i) }, l.prototype.disableFilters = function () { var e = this; t.each(this.filters, function (t, i) { e.disableFilter(i.field) }) }, l.prototype.disableFilter = function (t) { var e = this.getFilter(t); this.$buttonList.find("[data-filter-field=" + t + "] input[type=checkbox]").prop("checked", !1), e.enabled = !1, e.$dropdown && (e.$dropdown.remove(), delete e.$dropdown, this.trigger("disable-filter", e)), this.toggleRefreshButton(!0) }, l.prototype.selectFilterOption = function (t, e, i) { var n = this.getFilter(t); "undefined" == typeof n.selectedOptions && (n.selectedOptions = {}), i ? n.selectedOptions[e] = i : ("undefined" == typeof n.selectedOptions._values && (n.selectedOptions._values = []), n.selectedOptions._values.push(e)), this.trigger("select-filter-option", t, e, i), this.toggleRefreshButton(!0) }, l.prototype.unselectFilterOption = function (e, i) { var n = this.getFilter(e); "undefined" != typeof n.selectedOptions && "undefined" != typeof n.selectedOptions[i] && delete n.selectedOptions[i], "undefined" != typeof n.selectedOptions && "undefined" != typeof n.selectedOptions._values && (n.selectedOptions._values = n.selectedOptions._values.filter(function (t) { return t != i }), 0 == n.selectedOptions._values.length && delete n.selectedOptions._values, t.isEmptyObject(n.selectedOptions) && delete n.selectedOptions), this.trigger("unselect-filter-option", e, i), this.toggleRefreshButton(!0) }, l.prototype.setupFilter = function (e, i) { var n = this; this.enableFilter(e), t.each(i, function (i, l) { "_values" === i ? t.each(l, function (i, l) { n.selectFilterOption(e, l, !1), t('div[data-filter-field="' + e + '"] [data-val="' + l + '"] input.filter-enabled').prop("checked", !0) }) : (n.selectFilterOption(e, i, l), t('div[data-filter-field="' + e + '"] [data-val="' + i + '"] input.filter-enabled').prop("checked", !0), t('div[data-filter-field="' + e + '"] [data-val="' + i + '"] input[type="text"]:not([data-name])').val(l)) }) }, l.prototype.toggleRefreshButton = function (t) { this.$refreshButton.toggle(t) }, l.prototype.isSelected = function (t, e, i) { var n = this.getFilter(t); if ("undefined" != typeof n.selectedOptions) { if ("undefined" != typeof n.selectedOptions[e] && (i ? n.selectedOptions[e] == i : n.selectedOptions[e])) return !0; if ("undefined" != typeof n.selectedOptions._values && n.selectedOptions._values.indexOf(e.toString()) > -1) return !0 } return !1 }, l.prototype.getData = function () { var e = this, i = {}; return t.each(e.filters, function (t, e) { e.enabled && "undefined" != typeof e.selectedOptions && (i[t] = e.selectedOptions) }), i }, t.fn.bootstrapTableFilter = function (e, i, n) { l.externals = this.externals; var o, r = ["addFilter", "removeFilter", "enableFilter", "disableFilter", "disableFilters", "selectFilterOption", "unselectFilterOption", "setupFilter", "toggleRefreshButton", "getData", "isSelected", "resetView"]; return this.each(function () { var s = t(this), a = s.data("bootstrap.tableFilter"), p = t.extend({}, l.DEFAULTS, s.data(), "object" == typeof e && e); if ("string" == typeof e) { if (t.inArray(e, r) < 0) throw "Unknown method: " + e; if (!a) return; o = a[e](i, n), "destroy" === e && s.removeData("bootstrap.tableFilter") } a || s.data("bootstrap.tableFilter", a = new l(this, p)) }), "undefined" == typeof o ? this : o }, t.fn.bootstrapTableFilter.Constructor = l, t.fn.bootstrapTableFilter.defaults = l.DEFAULTS, t.fn.bootstrapTableFilter.columnDefaults = l.COLUMN_DEFAULTS, t.fn.bootstrapTableFilter.externals = l.EXTERNALS, t.fn.bootstrapTableFilter.filterSources = l.FILTER_SOURCES, t(function () { t('[data-toggle="tableFilter"]').bootstrapTableFilter() }) }(jQuery);

//BootstrapTableFilter_es
!function (e) { "use strict"; e.extend(e.fn.bootstrapTableFilter.defaults, { formatRemoveFiltersMessage: function () { return "Eliminar Filtros" }, formatSearchMessage: function () { return "Buscar" } }), e.fn.bootstrapTableFilter.filterSources.range.rows[0].i18n.msg = "Equivale a", e.fn.bootstrapTableFilter.filterSources.search.rows[0].i18n.msg = "" }(jQuery);

//BootstrapTableExport
!function (a) { "use strict"; var b = { json: "JSON", xml: "XML", png: "PNG", csv: "CSV", txt: "TXT", sql: "SQL", doc: "Word", excel: "<i class='fa fa-file-excel-o fw'></i>&nbsp;  Excel", powerpoint: "Powerpoint", pdf: "PDF" }; a.extend(a.fn.bootstrapTable.defaults, { showExport: !1, exportTypes: ["json", "xml", "csv", "txt", "sql", "excel"] }); var c = a.fn.bootstrapTable.Constructor, d = c.prototype.initToolbar; c.prototype.initToolbar = function () { if (this.showToolbar = !0, d.apply(this, Array.prototype.slice.apply(arguments)), this.options.showExport) { var c = this, e = this.$toolbar.find(">.btn-group"), f = e.find("div.export"); if (!f.length) { f = a(['<div class="export btn-group" data-toggle="tooltip" data-placement="top" title="Exportar">', '<button class="btn btn-default dropdown-toggle btn-sm" data-toggle="dropdown" type="button">', '<i class="fa fa-share"></i> ', '<span class="caret" style="margin-left:5px !important;"></span>', "</button>", '<ul class="dropdown-menu" role="menu" style="font-size:12px !important; min-width: 120px !important;">', "</ul>", "</div>"].join("")).appendTo(e); var g = f.find(".dropdown-menu"), h = this.options.exportTypes; if ("string" == typeof this.options.exportTypes) { var i = this.options.exportTypes.slice(1, -1).replace(/ /g, "").split(","); h = [], a.each(i, function (a, b) { h.push(b.slice(1, -1)) }) } a.each(h, function (a, c) { b.hasOwnProperty(c) && g.append(['<li data-type="' + c + '">', '<a href="javascript:void(0)">', b[c], "</a>", "</li>"].join("")) }), g.find("li").click(function () { c.$el.tableExport({ type: a(this).data("type"), escape: !1 }) }) } } } }(jQuery);

//Jquery.base64
jQuery.base64 = function () { function r(r, t) { var e = a.indexOf(r.charAt(t)); if (-1 === e) throw "Cannot decode base64"; return e } function t(t) { var e, n, a = 0, c = t.length, o = []; if (t = String(t), 0 === c) return t; if (c % 4 !== 0) throw "Cannot decode base64"; for (t.charAt(c - 1) === h && (a = 1, t.charAt(c - 2) === h && (a = 2), c -= 4), e = 0; c > e; e += 4) n = r(t, e) << 18 | r(t, e + 1) << 12 | r(t, e + 2) << 6 | r(t, e + 3), o.push(String.fromCharCode(n >> 16, n >> 8 & 255, 255 & n)); switch (a) { case 1: n = r(t, e) << 18 | r(t, e + 1) << 12 | r(t, e + 2) << 6, o.push(String.fromCharCode(n >> 16, n >> 8 & 255)); break; case 2: n = r(t, e) << 18 | r(t, e + 1) << 12, o.push(String.fromCharCode(n >> 16)) } return o.join("") } function e(r, t) { var e = r.charCodeAt(t); if (e > 255) throw "INVALID_CHARACTER_ERR: DOM Exception 5"; return e } function n(r) { if (1 !== arguments.length) throw "SyntaxError: exactly one argument required"; r = String(r); var t, n, c = [], o = r.length - r.length % 3; if (0 === r.length) return r; for (t = 0; o > t; t += 3) n = e(r, t) << 16 | e(r, t + 1) << 8 | e(r, t + 2), c.push(a.charAt(n >> 18)), c.push(a.charAt(n >> 12 & 63)), c.push(a.charAt(n >> 6 & 63)), c.push(a.charAt(63 & n)); switch (r.length - o) { case 1: n = e(r, t) << 16, c.push(a.charAt(n >> 18) + a.charAt(n >> 12 & 63) + h + h); break; case 2: n = e(r, t) << 16 | e(r, t + 1) << 8, c.push(a.charAt(n >> 18) + a.charAt(n >> 12 & 63) + a.charAt(n >> 6 & 63) + h) } return c.join("") } var h = "=", a = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", c = "1.0"; return { decode: t, encode: n, VERSION: c } }(jQuery);

//TableExport
!function (e) { e.fn.extend({ tableExport: function (t) { function n(e) { return content_data = "true" == i.htmlContent ? e.html().trim() : e.text().trim(), "true" == i.escape && (content_data = escape(content_data)), content_data } var i = { separator: ",", ignoreColumn: [], tableName: "yourTableName", type: "csv", pdfFontSize: 14, pdfLeftMargin: 20, escape: "true", htmlContent: "false", consoleLog: "false" }, t = e.extend(i, t), o = this; if ("csv" == i.type || "txt" == i.type) { var a = ""; e(o).find("thead").find("tr").each(function () { a += "\n", e(this).filter(":visible").find("th").each(function (t) { "none" != e(this).css("display") && -1 == i.ignoreColumn.indexOf(t) && (a += '"' + n(e(this)) + '"' + i.separator) }), a = e.trim(a), a = e.trim(a).substring(0, a.length - 1) }), e(o).find("tbody").find("tr").each(function () { a += "\n", e(this).filter(":visible").find("td").each(function (t) { "none" != e(this).css("display") && -1 == i.ignoreColumn.indexOf(t) && (a += '"' + n(e(this)) + '"' + i.separator) }), a = e.trim(a).substring(0, a.length - 1) }), "true" == i.consoleLog && console.log(a); var s = "base64," + e.base64.encode(a); window.open("data:application/" + i.type + ";filename=exportData;" + s) } else if ("sql" == i.type) { var a = "INSERT INTO `" + i.tableName + "` ("; e(o).find("thead").find("tr").each(function () { e(this).filter(":visible").find("th").each(function (t) { "none" != e(this).css("display") && -1 == i.ignoreColumn.indexOf(t) && (a += "`" + n(e(this)) + "`,") }), a = e.trim(a), a = e.trim(a).substring(0, a.length - 1) }), a += ") VALUES ", e(o).find("tbody").find("tr").each(function () { a += "(", e(this).filter(":visible").find("td").each(function (t) { "none" != e(this).css("display") && -1 == i.ignoreColumn.indexOf(t) && (a += '"' + n(e(this)) + '",') }), a = e.trim(a).substring(0, a.length - 1), a += ")," }), a = e.trim(a).substring(0, a.length - 1), a += ";", "true" == i.consoleLog && console.log(a); var s = "base64," + e.base64.encode(a); window.open("data:application/sql;filename=exportData;" + s) } else if ("json" == i.type) { var d = []; e(o).find("thead").find("tr").each(function () { var t = []; e(this).filter(":visible").find("th").each(function (o) { "none" != e(this).css("display") && -1 == i.ignoreColumn.indexOf(o) && t.push(n(e(this))) }), d.push(t) }); var r = []; e(o).find("tbody").find("tr").each(function () { var t = []; e(this).filter(":visible").find("td").each(function (o) { "none" != e(this).css("display") && -1 == i.ignoreColumn.indexOf(o) && t.push(n(e(this))) }), r.push(t) }); var l = []; l.push({ header: d, data: r }), "true" == i.consoleLog && console.log(JSON.stringify(l)); var s = "base64," + e.base64.encode(JSON.stringify(l)); window.open("data:application/json;filename=exportData;" + s) } else if ("xml" == i.type) { var f = '<?xml version="1.0" encoding="utf-8"?>'; f += "<tabledata><fields>", e(o).find("thead").find("tr").each(function () { e(this).filter(":visible").find("th").each(function (t) { "none" != e(this).css("display") && -1 == i.ignoreColumn.indexOf(t) && (f += "<field>" + n(e(this)) + "</field>") }) }), f += "</fields><data>"; var c = 1; e(o).find("tbody").find("tr").each(function () { f += '<row id="' + c + '">'; var t = 0; e(this).filter(":visible").find("td").each(function (o) { "none" != e(this).css("display") && -1 == i.ignoreColumn.indexOf(o) && (f += "<column-" + t + ">" + n(e(this)) + "</column-" + t + ">"), t++ }), c++, f += "</row>" }), f += "</data></tabledata>", "true" == i.consoleLog && console.log(f); var s = "base64," + e.base64.encode(f); window.open("data:application/xml;filename=exportData;" + s) } else if ("excel" == i.type || "doc" == i.type || "powerpoint" == i.type) { var h = "<table>"; e(o).find("thead").find("tr").each(function () { h += "<tr>", e(this).filter(":visible").find("th").each(function (t) { "none" != e(this).css("display") && -1 == i.ignoreColumn.indexOf(t) && (h += "<td>" + n(e(this)) + "</td>") }), h += "</tr>" }); var c = 1; e(o).find("tbody").find("tr").each(function () { h += "<tr>"; var t = 0; e(this).filter(":visible").find("td").each(function (o) { "none" != e(this).css("display") && -1 == i.ignoreColumn.indexOf(o) && (h += "<td>" + n(e(this)) + "</td>"), t++ }), c++, h += "</tr>" }), h += "</table>", "true" == i.consoleLog && console.log(h); var p = "<html xmlns:o='urn:schemas-microsoft-com:office:office' xmlns:x='urn:schemas-microsoft-com:office:" + i.type + "' xmlns='http://www.w3.org/TR/REC-html40'>"; p += "<head>", p += "<!--[if gte mso 9]>", p += "<xml>", p += "<x:ExcelWorkbook>", p += "<x:ExcelWorksheets>", p += "<x:ExcelWorksheet>", p += "<x:Name>", p += "{worksheet}", p += "</x:Name>", p += "<x:WorksheetOptions>", p += "<x:DisplayGridlines/>", p += "</x:WorksheetOptions>", p += "</x:ExcelWorksheet>", p += "</x:ExcelWorksheets>", p += "</x:ExcelWorkbook>", p += "</xml>", p += "<![endif]-->", p += "</head>", p += "<body>", p += h, p += "</body>", p += "</html>"; var s = "base64," + e.base64.encode(p); window.open("data:application/vnd.ms-" + i.type + ";filename=exportData.doc;" + s) } else if ("png" == i.type) html2canvas(e(o), { onrendered: function (e) { var t = e.toDataURL("image/png"); window.open(t) } }); else if ("pdf" == i.type) { var u = new jsPDF("p", "pt", "a4", !0); u.setFontSize(i.pdfFontSize); var m = i.pdfLeftMargin; e(o).find("thead").find("tr").each(function () { e(this).filter(":visible").find("th").each(function (t) { if ("none" != e(this).css("display") && -1 == i.ignoreColumn.indexOf(t)) { var o = m + 50 * t; u.text(o, 20, n(e(this))) } }) }); var x = 20, b = 1, g = 0; e(o).find("tbody").find("tr").each(function (t) { rowCalc = t + 1, rowCalc % 26 == 0 && (u.addPage(), b++, x += 10), g = x + 10 * rowCalc - 280 * (b - 1), e(this).filter(":visible").find("td").each(function (t) { if ("none" != e(this).css("display") && -1 == i.ignoreColumn.indexOf(t)) { var o = m + 50 * t; u.text(o, g, n(e(this))) } }) }), u.output("datauri") } } }) }(jQuery);
